Index: src/main/java/org/example/mibocatajavafx/controller/CocinaController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\npackage org.example.mibocatajavafx.controller;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport org.example.mibocatajavafx.dao.PedidoDAO;\r\nimport org.example.mibocatajavafx.models.Pedido;\r\n\r\nimport java.util.List;\r\n\r\npublic class CocinaController {\r\n\r\n    @FXML\r\n    private TableView<Pedido> tablaPedidos;\r\n    @FXML\r\n    private TableColumn<Pedido, Long> columnaId;\r\n    @FXML\r\n    private TableColumn<Pedido, String> columnaMac;\r\n    @FXML\r\n    private TableColumn<Pedido, String> columnaBocadillo;\r\n    @FXML\r\n    private TableColumn<Pedido, String> columnaFecha;\r\n    @FXML\r\n    private TableColumn<Pedido, String> columnaHora;\r\n    @FXML\r\n    private TableColumn<Pedido, Boolean> columnaRetirado;\r\n    @FXML\r\n    private TextField txtTotalCalientes;\r\n   @FXML\r\n   private TextField txtTotalFrios;\r\n\r\n   // private PedidoDAO pedidoDAO = new PedidoDAO();\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        columnaId.setCellValueFactory(new PropertyValueFactory<>(\"id\"));\r\n        columnaMac.setCellValueFactory(new PropertyValueFactory<>(\"alumnoMac\"));\r\n        columnaBocadillo.setCellValueFactory(new PropertyValueFactory<>(\"bocadilloNombre\"));\r\n        columnaFecha.setCellValueFactory(new PropertyValueFactory<>(\"fecha\"));\r\n        columnaHora.setCellValueFactory(new PropertyValueFactory<>(\"hora\"));\r\n        columnaRetirado.setCellFactory(tc -> new TableCell<>() {\r\n            private final CheckBox checkBox = new CheckBox();\r\n\r\n            {\r\n                checkBox.setOnAction(event -> {\r\n                    Pedido pedido = getTableView().getItems().get(getIndex());\r\n                    pedido.setRetirado(checkBox.isSelected());\r\n                    pedidoDAO.actualizarPedido(pedido);\r\n                });\r\n            }\r\n\r\n            @Override\r\n            protected void updateItem(Boolean retirado, boolean empty) {\r\n                super.updateItem(retirado, empty);\r\n                if (empty) {\r\n                    setGraphic(null);\r\n                } else {\r\n                    checkBox.setSelected(retirado != null && retirado);\r\n                    setGraphic(checkBox);\r\n                }\r\n            }\r\n        });\r\n\r\n        cargarPedidos();\r\n    }\r\n\r\n\r\n    private void cargarPedidos() {\r\n        List<Pedido> listaPedidos = pedidoDAO.recogerPedidosPendientesHoy();\r\n        ObservableList<Pedido> pedidos = FXCollections.observableArrayList(listaPedidos);\r\n        tablaPedidos.setItems(pedidos);\r\n\r\n        long calientes = listaPedidos.stream()\r\n                .filter(p -> p.getBocadillo() != null && \"caliente\".equalsIgnoreCase(p.getBocadillo().getTipo().name()))\r\n                .count();\r\n\r\n        long frios = listaPedidos.stream()\r\n                .filter(p -> p.getBocadillo() != null && \"fr√≠o\".equalsIgnoreCase(p.getBocadillo().getTipo().name()))\r\n                .count();\r\n\r\n        txtTotalCalientes.setText(String.valueOf(calientes));\r\n        txtTotalFrios.setText(String.valueOf(frios));\r\n    }\r\n\r\n    @FXML\r\n    private void marcarComoRetirado() {\r\n        Pedido pedidoSeleccionado = tablaPedidos.getSelectionModel().getSelectedItem();\r\n        if (pedidoSeleccionado != null) {\r\n            pedidoSeleccionado.setRetirado(true);\r\n            pedidoDAO.actualizarPedido(pedidoSeleccionado);\r\n            cargarPedidos();\r\n        } else {\r\n            mostrarAlerta(\"Error\", \"Selecciona un pedido para marcarlo como retirado.\");\r\n        }\r\n    }\r\n\r\n    private void mostrarAlerta(String titulo, String mensaje) {\r\n        Alert alerta = new Alert(Alert.AlertType.WARNING);\r\n        alerta.setTitle(titulo);\r\n        alerta.setHeaderText(null);\r\n        alerta.setContentText(mensaje);\r\n        alerta.showAndWait();\r\n    }\r\n}\r\n\r\n */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/mibocatajavafx/controller/CocinaController.java b/src/main/java/org/example/mibocatajavafx/controller/CocinaController.java
--- a/src/main/java/org/example/mibocatajavafx/controller/CocinaController.java	(revision 27482e73e6e3fe90ea0f4c15070619204036a5bd)
+++ b/src/main/java/org/example/mibocatajavafx/controller/CocinaController.java	(date 1740248967019)
@@ -1,4 +1,4 @@
-/*
+
 package org.example.mibocatajavafx.controller;
 
 import javafx.collections.FXCollections;
@@ -90,7 +90,7 @@
         Pedido pedidoSeleccionado = tablaPedidos.getSelectionModel().getSelectedItem();
         if (pedidoSeleccionado != null) {
             pedidoSeleccionado.setRetirado(true);
-            pedidoDAO.actualizarPedido(pedidoSeleccionado);
+            PedidoDAO.actualizarPedido(pedidoSeleccionado);
             cargarPedidos();
         } else {
             mostrarAlerta("Error", "Selecciona un pedido para marcarlo como retirado.");
